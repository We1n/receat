"""
–§–∞–±—Ä–∏–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è EatBot
–ü–æ–∑–≤–æ–ª—è–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ç–∏–ø—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä –ø–æ —Ç–∏–ø—É –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.
"""
from telegram import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from typing import Optional, List, Dict, Any

class KeyboardFactory:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ–∞–±—Ä–∏–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è –±–æ—Ç–∞.
    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ get(type, **kwargs) –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω—É–∂–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    """
    @staticmethod
    def get(keyboard_type: str, **kwargs) -> Any:
        if keyboard_type == "main_menu":
            return KeyboardFactory._main_menu()
        elif keyboard_type == "recipe_menu":
            return KeyboardFactory._recipe_menu()
        elif keyboard_type == "category_management_menu":
            return KeyboardFactory._category_management_menu(kwargs.get("categories", []))
        elif keyboard_type == "products_menu":
            return KeyboardFactory._products_menu()
        elif keyboard_type == "collaborative_menu":
            return KeyboardFactory._collaborative_menu()
        elif keyboard_type == "nutrient_menu":
            return KeyboardFactory._nutrient_menu()
        elif keyboard_type == "dynamic_inline":
            return KeyboardFactory._dynamic_inline(kwargs.get("buttons", []))
        elif keyboard_type == "dynamic_reply":
            return KeyboardFactory._dynamic_reply(kwargs.get("buttons", []))
        elif keyboard_type == "confirm":
            return KeyboardFactory._confirm()
        elif keyboard_type == "back":
            return KeyboardFactory._back()
        else:
            raise ValueError(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: {keyboard_type}")

    @staticmethod
    def _main_menu() -> InlineKeyboardMarkup:
        keyboard = [
            [
                InlineKeyboardButton("üìö –†–µ—Ü–µ–ø—Ç—ã", callback_data="main_recipes"),
                InlineKeyboardButton("üçè –ü—Ä–æ–¥—É–∫—Ç—ã", callback_data="main_products")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def _recipe_menu() -> InlineKeyboardMarkup:
        keyboard = [
            [
                InlineKeyboardButton("üîç –ü–æ–∏—Å–∫", callback_data="recipe_search"),
                InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å", callback_data="recipe_add")
            ],
            [
                InlineKeyboardButton("üìã –ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã", callback_data="recipe_list"),
                InlineKeyboardButton("üóÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="recipe_categories")
            ],
            [InlineKeyboardButton("üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ë–ñ–£", callback_data="product_calculator")],
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def _category_management_menu(categories: list) -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏"""
        keyboard = []
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ 2 –≤ —Ä—è–¥
        for i in range(0, len(categories), 2):
            row = []
            row.append(InlineKeyboardButton(categories[i], callback_data=f"category_{categories[i]}"))
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ —Ä—è–¥, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
            if i + 1 < len(categories):
                row.append(InlineKeyboardButton(categories[i + 1], callback_data=f"category_{categories[i + 1]}"))
            
            keyboard.append(row)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        keyboard.append([
            InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å", callback_data="category_add"),
            InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="category_edit"),
            InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data="category_delete")
        ])
        keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ —Ä–µ—Ü–µ–ø—Ç—ã", callback_data="back_to_recipes")])
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def _products_menu() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é –ø—Ä–æ–¥—É–∫—Ç–æ–≤"""
        keyboard = [
            [
                InlineKeyboardButton("üîç –ü–æ–∏—Å–∫", callback_data="product_search"), 
                InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å", callback_data="product_add")
            ],
            [
                InlineKeyboardButton("üìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="product_categories"), 
                InlineKeyboardButton("üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ë–ñ–£", callback_data="product_calculator")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def _collaborative_menu() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã"""
        keyboard = [
            [InlineKeyboardButton("‚ûï –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å", callback_data="collaborative_invite")],
            [InlineKeyboardButton("üìã –ú–æ–∏ –∫–æ–ª–ª–∞–±–æ—Ä–∞—Ü–∏–∏", callback_data="collaborative_list")],
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def _nutrient_menu() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é –Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤"""
        keyboard = [
            [
                InlineKeyboardButton("üîç –ü–æ–∏—Å–∫ –Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤", callback_data="nutrient_search"),
                InlineKeyboardButton("üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫", callback_data="nutrient_reference")
            ],
            [
                InlineKeyboardButton("üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ë–ñ–£", callback_data="nutrient_calculator"),
                InlineKeyboardButton("üìä –ê–Ω–∞–ª–∏–∑ —Ä–∞—Ü–∏–æ–Ω–∞", callback_data="nutrient_analysis")
            ],
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def _dynamic_inline(buttons: list) -> InlineKeyboardMarkup:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç InlineKeyboardMarkup –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–ø–∏—Å–∫–æ–≤ –∫–Ω–æ–ø–æ–∫.
        –ü—Ä–∏–º–µ—Ä buttons:
        [
            [
                {"text": "–ö–Ω–æ–ø–∫–∞ 1", "callback_data": "cb1"},
                {"text": "–ö–Ω–æ–ø–∫–∞ 2", "callback_data": "cb2"}
            ],
            [
                {"text": "–ù–∞–∑–∞–¥", "callback_data": "back"}
            ]
        ]
        """
        keyboard = []
        for row in buttons:
            keyboard.append([InlineKeyboardButton(**btn) for btn in row])
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def _dynamic_reply(buttons: list) -> ReplyKeyboardMarkup:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç ReplyKeyboardMarkup –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–ø–∏—Å–∫–æ–≤ –∫–Ω–æ–ø–æ–∫.
        –ü—Ä–∏–º–µ—Ä buttons:
        [
            ["–ö–Ω–æ–ø–∫–∞ 1", "–ö–Ω–æ–ø–∫–∞ 2"],
            ["–ù–∞–∑–∞–¥"]
        ]
        """
        keyboard = [[KeyboardButton(text) for text in row] for row in buttons]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    @staticmethod
    def _confirm() -> InlineKeyboardMarkup:
        keyboard = [
            [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="recipe_delete_confirm_yes"),
             InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="recipe_delete_confirm_no")],
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def _back() -> InlineKeyboardMarkup:
        keyboard = [
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_confirmation_keyboard(action_prefix: str, entity_id: int):
        """
        –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –ª—é–±—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π.
        action_prefix: –Ω–∞–ø—Ä–∏–º–µ—Ä, 'recipe_delete_confirm', 'category_delete_confirm'
        entity_id: —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤–æ–π ID (–Ω–∏–∫–∞–∫–∏—Ö –∏–º—ë–Ω!)
        """
        keyboard = [
            [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"{action_prefix}_{entity_id}")],
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="back")]
        ]
        return InlineKeyboardMarkup(keyboard)

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
# KeyboardFactory.get("main_menu")
# KeyboardFactory.get("recipe_menu")
# KeyboardFactory.get("dynamic_inline", buttons=[[{"text": "A", "callback_data": "a"}]])
# KeyboardFactory.get("dynamic_reply", buttons=[["A", "B"]]) 