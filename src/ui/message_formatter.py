"""
–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
"""

from typing import Optional, Dict, Any
from telegram import InlineKeyboardMarkup
from src.ui.navigation import NavigationManager, NavigationSection

class MessageFormatter:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        self.navigation = NavigationManager()
    
    def format_message(
        self,
        text: str,
        section: Optional[NavigationSection] = None,
        keyboard: Optional[InlineKeyboardMarkup] = None,
        tip: Optional[str] = None,
        error: Optional[str] = None,
        success: Optional[str] = None,
        warning: Optional[str] = None,
        info: Optional[str] = None,
        **kwargs: Any
    ) -> Dict[str, Any]:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
        
        Args:
            text: –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            section: –†–∞–∑–¥–µ–ª –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            keyboard: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            tip: –ü–æ–¥—Å–∫–∞–∑–∫–∞
            error: –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            success: –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            warning: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            info: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            **kwargs: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            
        Returns:
            Dict[str, Any]: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        formatted_text = text
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ö–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏
        if section:
            formatted_text = f"{self.navigation.get_breadcrumbs(section)}\n\n{formatted_text}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        if tip:
            formatted_text += f"\n\nüí° *–°–æ–≤–µ—Ç:*\n{tip}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        if error:
            formatted_text += f"\n\n‚ùå *–û—à–∏–±–∫–∞:*\n{error}"
        if success:
            formatted_text += f"\n\n‚úÖ *–£—Å–ø–µ—Ö:*\n{success}"
        if warning:
            formatted_text += f"\n\n‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ:*\n{warning}"
        if info:
            formatted_text += f"\n\n‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:*\n{info}"
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        if kwargs:
            formatted_text = formatted_text.format(**kwargs)
        
        return {
            'text': formatted_text,
            'reply_markup': keyboard or (self.navigation.get_section_keyboard(section) if section else None),
            'parse_mode': 'Markdown'
        }
    
    def format_error(self, error: str, section: Optional[NavigationSection] = None) -> Dict[str, Any]:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        
        Args:
            error: –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
            section: –†–∞–∑–¥–µ–ª –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            
        Returns:
            Dict[str, Any]: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        """
        return self.format_message(
            text="‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞*",
            section=section,
            error=error
        )
    
    def format_success(self, message: str, section: Optional[NavigationSection] = None) -> Dict[str, Any]:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        
        Args:
            message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            section: –†–∞–∑–¥–µ–ª –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            
        Returns:
            Dict[str, Any]: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        """
        return self.format_message(
            text="‚úÖ *–£—Å–ø–µ—à–Ω–æ*",
            section=section,
            success=message
        )
    
    def format_warning(self, message: str, section: Optional[NavigationSection] = None) -> Dict[str, Any]:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        
        Args:
            message: –¢–µ–∫—Å—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
            section: –†–∞–∑–¥–µ–ª –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            
        Returns:
            Dict[str, Any]: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        """
        return self.format_message(
            text="‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ*",
            section=section,
            warning=message
        )
    
    def format_info(self, message: str, section: Optional[NavigationSection] = None) -> Dict[str, Any]:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        
        Args:
            message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            section: –†–∞–∑–¥–µ–ª –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            
        Returns:
            Dict[str, Any]: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        return self.format_message(
            text="‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*",
            section=section,
            info=message
        ) 