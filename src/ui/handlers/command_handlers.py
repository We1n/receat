"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
"""

from telegram import Update
from telegram.ext import ContextTypes, CommandHandler
from telegram import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from src.monitoring.profiler import Profiler
from src.utils.error_handler import ErrorHandler
from src.config.states import States
from src.ui.keyboards import KeyboardFactory
from src.ui.ui_service import ui_service
import logging

logger = logging.getLogger(__name__)
profiler = Profiler(output_dir="profiles/commands")

class CommandHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        pass
    
    @profiler.profile(save_to_file=True)
    @ErrorHandler.handle_errors
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        if not update.message or not update.effective_user:
            return
            
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º UIService –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        await ui_service.show_main_menu(update, context)
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    @profiler.profile(save_to_file=True)
    @ErrorHandler.handle_errors
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = (
            "ü§ñ *EatBot - –ü–æ–º–æ—â–Ω–∏–∫ –ø–æ –∑–¥–æ—Ä–æ–≤–æ–º—É –ø–∏—Ç–∞–Ω–∏—é*\n\n"
            "üìö *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
            "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
            "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
            "/recipes - –ú–µ–Ω—é —Ä–µ—Ü–µ–ø—Ç–æ–≤\n"
            "/products - –ú–µ–Ω—é –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n"
            "/collaborative - –°–æ–≤–º–µ—Å—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞\n\n"
            "üí° *–°–æ–≤–µ—Ç—ã:*\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\n"
            "‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã –∏ –ø—Ä–æ–¥—É–∫—Ç—ã\n"
            "‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞\n\n"
            "‚ùì *–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?*\n"
            "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞."
        )
        await ui_service._send_or_edit_message(
            update=update,
            context=context,
            text=help_text
        )
        logger.info("–ü–æ–∫–∞–∑–∞–Ω–∞ —Å–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
    
    @profiler.profile(save_to_file=True)
    @ErrorHandler.handle_errors
    async def menu_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu"""
        if not update.message:
            return
            
        await ui_service._send_or_edit_message(
            update=update,
            context=context,
            text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=KeyboardFactory.get("main_menu")
        )
    
    @profiler.profile(save_to_file=True)
    @ErrorHandler.handle_errors
    async def recipes_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /recipes"""
        await ui_service._send_or_edit_message(
            update=update,
            context=context,
            text="üìö *–ú–µ–Ω—é —Ä–µ—Ü–µ–ø—Ç–æ–≤*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=KeyboardFactory.get("recipe_menu")
        )
        logger.info("–ü–æ–∫–∞–∑–∞–Ω–æ –º–µ–Ω—é —Ä–µ—Ü–µ–ø—Ç–æ–≤")
    
    @profiler.profile(save_to_file=True)
    @ErrorHandler.handle_errors
    async def products_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /products"""
        await ui_service._send_or_edit_message(
            update=update,
            context=context,
            text="üçè *–ú–µ–Ω—é –ø—Ä–æ–¥—É–∫—Ç–æ–≤*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=KeyboardFactory.get("products_menu")
        )
        logger.info("–ü–æ–∫–∞–∑–∞–Ω–æ –º–µ–Ω—é –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
    
    @profiler.profile(save_to_file=True)
    @ErrorHandler.handle_errors
    async def collaborative_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /collaborative"""
        await ui_service._send_or_edit_message(
            update=update,
            context=context,
            text="üë• *–°–æ–≤–º–µ—Å—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=KeyboardFactory.get("collaborative_menu")
        )
        logger.info("–ü–æ–∫–∞–∑–∞–Ω–æ –º–µ–Ω—é —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã")
    
    @profiler.profile(save_to_file=True)
    @ErrorHandler.handle_errors
    async def handle_cancel(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> States:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel"""
        if not update.effective_user or not update.message:
            return States.MAIN_MENU
            
        user = update.effective_user
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –æ—Ç–º–µ–Ω–∏–ª —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ")
        
        # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if context.user_data:
            context.user_data.clear()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ
        await ui_service._send_or_edit_message(
            update=update,
            context=context,
            text="‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ\n\nüè† –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...",
            reply_markup=KeyboardFactory.get("main_menu")
        )
        
        return States.MAIN_MENU
    
    def register_handlers(self, application):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        application.add_handler(CommandHandler("start", self.start_command))
        application.add_handler(CommandHandler("help", self.help_command))
        application.add_handler(CommandHandler("menu", self.menu_command))
        application.add_handler(CommandHandler("recipes", self.recipes_command))
        application.add_handler(CommandHandler("products", self.products_command))
        application.add_handler(CommandHandler("collaborative", self.collaborative_command))
        application.add_handler(CommandHandler("cancel", self.handle_cancel)) 